{
  "project_info": {
    "name": "AI Chatbot API Endpoints",
    "description": "API endpoints cho AI Chatbot integration với Spring Boot",
    "base_urls": {
      "development": "http://localhost:8080",
      "production": "https://bookeat-service.onrender.com"
    },
    "ai_restaurant_id": 37,
    "ai_username": "AI Assistant"
  },

  "ai_chat_flow": {
    "description": "Luồng xử lý AI chat hoàn chỉnh",
    "steps": [
      "1. Customer gửi message qua WebSocket",
      "2. Spring Boot lưu user message và gọi AI service",
      "3. AI service nhận request và xử lý logic",
      "4. AI service gọi các APIs để lấy dữ liệu",
      "5. AI service tạo response và gửi về Spring Boot",
      "6. Spring Boot lưu AI response và broadcast qua WebSocket"
    ]
  },

  "ai_service_apis": {
    "receive_user_message": {
      "method": "POST",
      "endpoint": "http://localhost:8000/chat (DEV) hoặc https://restaurant-chatbot-service.onrender.com/chat (PROD)",
      "description": "API được Spring Boot gọi để gửi user message cho AI",
      "authentication": false,
      "body": {
        "message": "string - tin nhắn từ customer",
        "userId": "string - UUID của customer",
        "timestamp": "long - timestamp hiện tại"
      },
      "response": {
        "response": "string - AI response"
      }
    }
  },

  "restaurant_apis_for_ai": {
    "get_all_restaurants": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants",
      "description": "Lấy danh sách tất cả nhà hàng",
      "authentication": false,
      "response": "array of RestaurantDto",
      "use_case": "AI có thể sử dụng để tìm nhà hàng phù hợp với yêu cầu của customer"
    },
    
    "get_restaurant_details": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants/{restaurantId}",
      "description": "Chi tiết nhà hàng",
      "authentication": false,
      "params": ["restaurantId"],
      "response": "RestaurantDto object",
      "use_case": "AI lấy thông tin chi tiết nhà hàng để tư vấn"
    },
    
    "get_restaurant_menu": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants/{restaurantId}/dishes",
      "description": "Menu nhà hàng",
      "authentication": false,
      "params": ["restaurantId"],
      "response": "array of DishDto",
      "use_case": "AI có thể tư vấn món ăn phù hợp"
    },
    
    "get_restaurant_services": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants/{restaurantId}/services",
      "description": "Dịch vụ nhà hàng",
      "authentication": false,
      "params": ["restaurantId"],
      "response": "array of RestaurantServiceDto",
      "use_case": "AI tư vấn các dịch vụ có sẵn"
    },
    
    "get_restaurant_tables": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants/{restaurantId}/tables",
      "description": "Danh sách bàn nhà hàng",
      "authentication": false,
      "params": ["restaurantId"],
      "response": "array of RestaurantTableDto",
      "use_case": "AI kiểm tra loại bàn phù hợp với số lượng khách"
    },
    
    "get_table_layouts": {
      "method": "GET",
      "endpoint": "/api/booking/restaurants/{restaurantId}/table-layouts",
      "description": "Lấy table layouts của nhà hàng",
      "authentication": false,
      "params": ["restaurantId"],
      "response": "array of Map<String, Object>",
      "use_case": "AI có thể hiển thị sơ đồ bàn của nhà hàng"
    },
    
    "check_availability": {
      "method": "GET",
      "endpoint": "/api/booking/availability-check",
      "description": "Kiểm tra bàn trống",
      "authentication": false,
      "params": ["restaurantId", "bookingTime", "guestCount", "selectedTableIds(optional)"],
      "response": "AvailabilityCheckResponse object",
      "use_case": "AI kiểm tra bàn trống và đưa ra gợi ý thời gian đặt bàn"
    }
  },

  "booking_apis_for_ai": {
    "get_booking_details": {
      "method": "GET",
      "endpoint": "/api/booking/{bookingId}/details",
      "description": "Chi tiết booking",
      "authentication": true,
      "params": ["bookingId"],
      "response": "BookingDetailsDto object",
      "use_case": "AI có thể tra cứu thông tin booking của customer"
    },
    
    "get_available_time_slots": {
      "method": "GET",
      "endpoint": "/api/booking/conflicts/available-slots/{tableId}",
      "description": "Lấy danh sách time slots khả dụng cho một bàn",
      "authentication": false,
      "params": ["tableId", "date"],
      "response": "AvailableSlotsResponse",
      "use_case": "AI có thể đưa ra gợi ý thời gian đặt bàn cụ thể"
    },
    
    "check_booking_conflicts": {
      "method": "POST",
      "endpoint": "/api/booking/conflicts/check",
      "description": "Kiểm tra conflicts cho booking mới",
      "authentication": false,
      "body": {
        "bookingForm": "BookingForm object",
        "customerId": "UUID"
      },
      "response": "ConflictCheckResponse",
      "use_case": "AI có thể kiểm tra xem booking có conflict không"
    },
    
    "join_waitlist": {
      "method": "POST",
      "endpoint": "/api/booking/join-waitlist",
      "description": "Tham gia waitlist",
      "authentication": true,
      "body": "JoinWaitlistRequest",
      "response": "JoinWaitlistResponse",
      "use_case": "AI có thể giúp customer tham gia waitlist khi không có bàn trống"
    },
    
    "get_waitlist_details": {
      "method": "GET",
      "endpoint": "/api/booking/waitlist/{waitlistId}/details",
      "description": "Lấy chi tiết waitlist",
      "authentication": true,
      "params": ["waitlistId"],
      "response": "WaitlistDetailsResponse",
      "use_case": "AI có thể kiểm tra trạng thái waitlist của customer"
    }
  },

  "voucher_apis_for_ai": {
    "validate_voucher": {
      "method": "POST",
      "endpoint": "/api/vouchers/validate",
      "description": "Kiểm tra voucher",
      "authentication": false,
      "body": {
        "code": "string",
        "restaurantId": "integer",
        "bookingTime": "datetime",
        "guestCount": "integer",
        "orderAmount": "decimal"
      },
      "response": "ValidationResponse object",
      "use_case": "AI có thể kiểm tra và tư vấn voucher phù hợp"
    },
    
    "get_demo_vouchers": {
      "method": "GET",
      "endpoint": "/api/vouchers/demo",
      "description": "Lấy demo vouchers",
      "authentication": false,
      "params": ["restaurantId(optional)"],
      "response": "array of VoucherSummary",
      "use_case": "AI có thể đề xuất voucher cho customer"
    },
    
    "get_my_vouchers": {
      "method": "GET",
      "endpoint": "/api/vouchers/my",
      "description": "Lấy vouchers của customer",
      "authentication": true,
      "response": "array of VoucherSummary",
      "use_case": "AI có thể xem vouchers đã được assign cho customer"
    },
    
    "assign_voucher": {
      "method": "POST",
      "endpoint": "/api/vouchers/assign/{voucherId}",
      "description": "Assign voucher cho customer",
      "authentication": true,
      "params": ["voucherId"],
      "response": "Success message",
      "use_case": "AI có thể assign voucher cho customer"
    }
  },

  "user_apis_for_ai": {
    "get_current_user": {
      "method": "GET",
      "endpoint": "/api/user/current",
      "description": "Lấy thông tin user hiện tại",
      "authentication": true,
      "response": "UserInfoResponse",
      "use_case": "AI có thể lấy thông tin user để cá nhân hóa"
    }
  },

  "chat_apis_for_ai": {
    "get_available_restaurants": {
      "method": "GET",
      "endpoint": "/api/chat/available-restaurants",
      "description": "Lấy danh sách nhà hàng có thể chat",
      "authentication": true,
      "response": "array of RestaurantProfile",
      "use_case": "AI có thể xem danh sách nhà hàng có thể chat"
    },
    
    "get_available_admins": {
      "method": "GET",
      "endpoint": "/api/chat/available-admins",
      "description": "Lấy danh sách admin có thể chat",
      "authentication": true,
      "response": "array of User",
      "use_case": "AI có thể xem danh sách admin có thể chat"
    },
    
    "get_chat_rooms": {
      "method": "GET",
      "endpoint": "/api/chat/rooms",
      "description": "Lấy chat rooms của user",
      "authentication": true,
      "response": "array of ChatRoomInfo",
      "use_case": "AI có thể xem lịch sử chat của customer"
    },
    
    "create_chat_room": {
      "method": "POST",
      "endpoint": "/api/chat/rooms",
      "description": "Tạo chat room với restaurant",
      "authentication": true,
      "params": ["restaurantId"],
      "response": "ChatRoomInfo",
      "use_case": "AI có thể tạo chat room mới"
    },
    
    "get_messages": {
      "method": "GET",
      "endpoint": "/api/chat/rooms/{roomId}/messages",
      "description": "Lấy messages trong room",
      "authentication": true,
      "params": ["roomId", "page", "size"],
      "response": "array of Message",
      "use_case": "AI có thể xem lịch sử tin nhắn"
    },
    
    "mark_messages_read": {
      "method": "POST",
      "endpoint": "/api/chat/rooms/{roomId}/read",
      "description": "Đánh dấu messages đã đọc",
      "authentication": true,
      "params": ["roomId"],
      "response": "Success message",
      "use_case": "AI có thể đánh dấu tin nhắn đã đọc"
    },
    
    "get_unread_count": {
      "method": "GET",
      "endpoint": "/api/chat/unread-count",
      "description": "Lấy unread count tổng",
      "authentication": true,
      "response": "UnreadCountResponse",
      "use_case": "AI có thể kiểm tra số tin nhắn chưa đọc"
    },
    
    "archive_chat_room": {
      "method": "POST",
      "endpoint": "/api/chat/rooms/{roomId}/archive",
      "description": "Archive chat room",
      "authentication": true,
      "params": ["roomId"],
      "response": "Success message",
      "use_case": "AI có thể archive chat room"
    }
  },

  "websocket_endpoints": {
    "chat_websocket": {
      "endpoint": "/ws",
      "description": "WebSocket endpoint cho real-time chat",
      "subscription": "/topic/room/{roomId}",
      "send_message": "/app/chat.sendMessage",
      "typing_indicator": "/app/chat.typing"
    },
    "ai_chat_specific": {
      "description": "AI chat sử dụng cùng WebSocket endpoint",
      "ai_restaurant_detection": "ChatMessageController tự động phát hiện room thuộc AI restaurant (ID = 37)",
      "ai_response_flow": "AI response được gửi qua /topic/room/{roomId}"
    }
  },

  "ai_agent_implementation_guide": {
    "message_processing": {
      "intent_recognition": [
        "Tìm nhà hàng theo địa điểm",
        "Tìm nhà hàng theo loại ẩm thực", 
        "Đặt bàn",
        "Kiểm tra bàn trống",
        "Tư vấn menu",
        "Kiểm tra voucher",
        "Hỏi về dịch vụ nhà hàng",
        "Tra cứu booking",
        "Tham gia waitlist"
      ],
      "response_generation": [
        "Tạo response dựa trên dữ liệu từ APIs",
        "Đưa ra gợi ý cá nhân hóa",
        "Xử lý trường hợp không tìm thấy thông tin",
        "Hướng dẫn customer các bước tiếp theo"
      ]
    },
    
    "api_usage_patterns": {
      "restaurant_search": "get_all_restaurants -> get_restaurant_details -> check_availability",
      "menu_consultation": "get_restaurant_details -> get_restaurant_menu -> get_restaurant_services",
      "booking_assistance": "check_availability -> check_booking_conflicts -> join_waitlist",
      "voucher_assistance": "get_demo_vouchers -> validate_voucher -> assign_voucher"
    }
  },

  "configuration": {
    "ai_server_urls": {
      "development": "http://localhost:8000",
      "production": "https://restaurant-chatbot-service.onrender.com"
    },
    "timeouts": {
      "development": "30000ms (30 seconds)",
      "production": "60000ms (60 seconds)"
    }
  },

  "error_handling": {
    "ai_server_unavailable": "Trả về message: 'Xin lỗi, AI server hiện đang không khả dụng. Vui lòng thử lại sau.'",
    "api_timeout": "Trả về message: 'Xin lỗi, hệ thống đang xử lý. Vui lòng thử lại sau.'",
    "no_data_found": "Trả về message: 'Xin lỗi, không tìm thấy thông tin phù hợp. Bạn có thể thử tìm kiếm với tiêu chí khác.'",
    "general_error": "Trả về message: 'Xin lỗi, có lỗi xảy ra khi xử lý tin nhắn của bạn.'"
  },

  "best_practices": {
    "api_calling": [
      "Luôn kiểm tra status code trước khi xử lý response",
      "Sử dụng timeout phù hợp cho mỗi API call",
      "Cache dữ liệu tĩnh (menu, dịch vụ) để tăng performance",
      "Xử lý lỗi gracefully và đưa ra thông báo thân thiện"
    ],
    "response_generation": [
      "Tạo response ngắn gọn, dễ hiểu",
      "Đưa ra gợi ý cụ thể thay vì thông tin chung chung",
      "Sử dụng emoji và format để tăng tính thân thiện",
      "Luôn kết thúc bằng câu hỏi để khuyến khích tương tác"
    ]
  }
}